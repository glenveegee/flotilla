#!/bin/bash

pkgdeplist7=( "libboost-system1.50.0" "libboost-filesystem1.50.0" "libboost-program-options1.50.0" ) # list of the dependencies for Wheezy
pkgdeplist8=( "libboost-system1.50.0" "libboost-filesystem1.50.0" "libboost-program-options1.50.0" ) # list of the dependencies for Jessie

HOME=/home/$SUDO_USER

raspbian_old () {
    DIST_CHK=$(cat /etc/os-release | grep "wheezy")

    if [ "" == "$DIST_CHK" ];then
        false
    else
        true
    fi
}

apt_pkg_req () {
    APT_CHK=$(dpkg-query -W --showformat='${Status}\n' $1|grep "install ok installed")

    if [ "" == "$APT_CHK" ]; then
        true
    else
        false
    fi
}

if [ $(id -u) -ne 0 ]; then
    printf "Install must be run as root. Try 'sudo ./install'\n"
    exit 1
fi

if [ -f $HOME/.config/autostart/flotilla.desktop ]; then
    printf "Removing redundant file $HOME/.config/autostart/flotilla.desktop\n"
    rm -f $HOME/.config/autostart/flotilla.desktop
fi

printf "Installing dependencies...\n"

updatedb=false

if ! raspbian_old; then
    for pkgdep in ${pkgdeplist8[@]}
        do if apt_pkg_req "$pkgdep" ; then
            updatedb=true
        fi
        done

    if $updatedb ; then
        printf "\nUpdating package indexes..."
        sudo apt-get update
    fi

    for pkgdep in ${pkgdeplist8[@]}
        do printf "Checking for dependencies...\n"
        if apt_pkg_req "$pkgdep" ; then
            sudo apt-get --yes --force-yes install "$pkgdep"
        fi
        done
else
    for pkgdep in ${pkgdeplist7[@]}
        do if apt_pkg_req "$pkgdep" ; then
            updatedb=true
        fi
        done
    if $updatedb ; then
        printf "\nUpdating package indexes..."
        sudo apt-get update
    fi

    for pkgdep in ${pkgdeplist7[@]}
        do printf "Checking for dependencies...\n"
        if apt_pkg_req "$pkgdep" ; then
            sudo apt-get --yes --force-yes install "$pkgdep"
        fi
        done
fi

if [ -f /usr/local/lib/libserialport.so.0.0.0 ]; then
    printf "libserialport already installed. Updating...\n"
fi

cp ./dependencies/libs/libserialport* /usr/local/lib/

if [ ! -f /usr/local/lib/libserialport.so.0 ]; then
    ln -s /usr/local/lib/libserialport.so.0.0.0 /usr/local/lib/libserialport.so.0
fi

if [ ! -f /usr/local/lib/libserialport.so ]; then
    ln -s /usr/local/lib/libserialport.so.0.0.0 /usr/local/lib/libserialport.so
fi

chown root:staff /usr/local/lib/libserialport*
ldconfig

if [ ! -f /usr/bin/flotilla ]; then
    printf "Installing Flotilla daemon...\n"
    if ! raspbian_old; then
        cp flotilla /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    else
        cp flotilla-wheezy /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    fi
else
    printf "Flotilla already installed. Updating...\n"
    if ! raspbian_old; then
        cp flotilla /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    else
        cp flotilla-wheezy /usr/bin/flotilla
        chmod +x /usr/bin/flotilla
    fi
fi

if [ ! -f /etc/init.d/flotillad ]; then
    printf "Setting up init script...\n"
    cp dependencies/flotillad /etc/init.d/
    chmod +x /etc/init.d/flotillad
    update-rc.d flotillad defaults
    /etc/init.d/flotillad start &
else
    printf "Init script already on system. Updating...\n"
    cp dependencies/flotillad /etc/init.d/
    chmod +x /etc/init.d/flotillad
    update-rc.d flotillad defaults
    /etc/init.d/flotillad restart &
fi

printf "Installing Rockpool...\n"

cp -r rockpool /opt
cp dependencies/rockpool /usr/sbin/
chmod +x /usr/sbin/rockpool
cp dependencies/rockpool.png /usr/share/pixmaps/
cp dependencies/rockpool.desktop /usr/share/applications/

printf "\nAll done! Time to set sail.\n"

exit 0
